<?xml version="1.0" encoding="UTF-8"?>
<gretl-functions>
<gretl-function-package name="genr_dates" needs-time-series-data="true" minver="1.9.4">
<author email="yinung.yang@gmail.com">Yi-Nung Yang</author>
<version>2023.1</version>
<date>2023-02-21</date>
<description>generate yyyy, mm, day,weekday</description>
<tags>C81</tags>
<help>
This package is to generate year, quarter, month, day, and weekday from obslabel() in data sets. It is useful when dummy varialbes are needed for various time frequencies. For example, you may generate 'weeday' variable and specify a weeday dummy to investigate 'Weekday Effects&quot; in models.
</help>
<gretl-function name="genr_dates" type="list">
 <params count="12">
  <param name="nDateType" type="int" min="1" max="2" default="1">
<description>obs label format</description>
<labels count="2">
"yyyy-mm-dd" "yyyy/mm/dd" </labels>
  </param>
  <param name="sv_yr" type="bool" default="1">
<description>產生「年」變數 (save year as yyyy)</description>
  </param>
  <param name="sv_qtr" type="bool" default="1">
<description>產生「季」變數 (save quarter as qtr )</description>
  </param>
  <param name="sv_mm" type="bool" default="1">
<description>產生「月」變數 (save month as mm)</description>
  </param>
  <param name="sv_dd" type="bool" default="1">
<description>產生「日」變數 (save day as dd)</description>
  </param>
  <param name="sv_wd" type="bool" default="1">
<description>產生「星期」變數 (save weekday as wd)</description>
  </param>
  <param name="user_yyyy" type="string" optional="true">
<description>自訂「年」變數名稱 (define variable names for 'year'</description>
  </param>
  <param name="user_qtr" type="string" optional="true">
<description>自訂「季」變數名稱 (define variable names for 'quarter'</description>
  </param>
  <param name="user_mm" type="string" optional="true">
<description>自訂「月」變數名稱 (define variable names for 'month'</description>
  </param>
  <param name="user_dd" type="string" optional="true">
<description>自訂「日」變數名稱 (define variable names for 'day'</description>
  </param>
  <param name="user_wd" type="string" optional="true">
<description>自訂「星期」變數名稱 (define variable names for 'weekday'</description>
  </param>
  <param name="verbose" type="int" min="0" max="3" default="1">
<description>verbosity</description>
  </param>
 </params>
<code>if exists(user_yyyy)
  string yyyy1=user_yyyy
else
  string yyyy1=&quot;yyyy&quot;
endif
if exists(user_qtr)
  string qtr1=user_qtr
else
  string qtr1=&quot;qtr&quot;
endif
if exists(user_mm)
  string mm1=user_mm
else
  string mm1=&quot;mm&quot;
endif
if exists(user_dd)
  string dd1=user_dd
else
  string dd1=&quot;dd&quot;
endif
if exists(user_wd)
  string wd1=user_wd
else
  string wd1=&quot;wd&quot;
endif
scalar T = $t2
scalar yr, mo, dy,qq
series monday = 0
set messages off
series @yyyy1
series @qtr1
series @mm1
series @dd1
series @wd1
setinfo @yyyy1 -d  &quot;year (年)        by genr_date()&quot;
setinfo @qtr1 -d   &quot;quarter (季)     by genr_date()&quot;
setinfo @mm1 -d    &quot;month (月)      by genr_date()&quot;
setinfo @dd1 -d    &quot;day (日)         by genr_date()&quot;
setinfo @wd1 -d    &quot;weekday (星期)  by genr_date()&quot;
auto=1
list retlist=const
loop i=1..T -q
  string date = obslabel(i)
  if auto==1
    if ($pd==5 || $pd==6 || $pd==7)
      if nDateType==1
        sscanf date, &quot;%d-%d-%d&quot;, &amp;yr, &amp;mo, &amp;dy
      else
        sscanf date, &quot;%d/%d/%d&quot;, &amp;yr, &amp;mo, &amp;dy
      endif
      @yyyy1[i]=yr
      @qtr1[i]=ceil(mo/3)
      @mm1[i]=mo
      @dd1[i]=dy
      @wd1[i]=weekday(yr, mo, dy)
    endif
    if $pd==4
      sscanf date, &quot;%d:%d&quot;, &amp;yr, &amp;qq
      @yyyy1[i]=yr
      @qtr1[i]=qq
    endif
    if $pd==12
      sscanf date, &quot;%d:%d&quot;, &amp;yr, &amp;mo
      @yyyy1[i]=yr
      @qtr1[i]=ceil(mo/3)
      @mm1[i]=mo
    endif
    if $pd==52
      if nDateType==1
        sscanf date, &quot;%d-%d-%d&quot;, &amp;yr, &amp;mo, &amp;dy
      else
        sscanf date, &quot;%d/%d/%d&quot;, &amp;yr, &amp;mo, &amp;dy
      endif
      @yyyy1[i]=yr
      @qtr1[i]=ceil(mo/3)
      @mm1[i]=mo
      @dd1[i]=dy
      @wd1[i]=weekday(yr, mo, dy)
    endif
    if $pd==1
      sscanf date, &quot;%d&quot;, &amp;yr
      @yyyy1[i]=yr
    endif
  endif
endloop
if ($pd==5 || $pd==6 || $pd==7)
  if sv_yr==1
    list retlist = retlist @yyyy1
  endif
  if sv_qtr==1
    list retlist = retlist @qtr1
  endif
  if sv_mm==1
    list retlist = retlist @mm1
  endif
  if sv_dd==1
    list retlist = retlist @dd1
  endif
  if sv_wd==1
    list retlist = retlist @wd1
  endif
endif
if $pd==4
  if sv_yr==1
    list retlist = retlist @yyyy1
  endif
  if sv_qtr==1
    list retlist = retlist @qtr1
  endif
endif
if $pd==12
  if sv_yr==1
    list retlist = retlist @yyyy1
  endif
  if sv_qtr==1
    list retlist = retlist @qtr1
  endif
  if sv_mm==1
    list retlist = retlist @mm1
  endif
endif
if $pd==52
  if sv_yr==1
    list retlist = retlist @yyyy1
  endif
  if sv_qtr==1
    list retlist = retlist @qtr1
  endif
  if sv_mm==1
    list retlist = retlist @mm1
  endif
  if sv_dd==1
    list retlist = retlist @dd1
  endif
  if sv_wd==1
    list retlist = retlist @wd1
  endif
endif
if $pd==1
  if sv_yr==1
    list retlist = retlist @yyyy1
  endif
endif
if verbose &gt; 0
  printf &quot;====================================================\n&quot;
  printf &quot;The series shown below have been generated.\n&quot;
  printf &quot;(已新增以下資料變數....)\n&quot;
  printf &quot;====================================================\n&quot;
endif
list retlist -= const
return retlist
</code>
</gretl-function>
<sample-script>
# The following gretl data can demonstrate the use of this package.
#open djclose			# daily data
#open australia			# quarterly data
#open arma				# monthly data
#open http://www.it.cycu.edu.tw/yaya20/files/2013/06/2005-CARR.gdt	# weekly data
include genr_dates.gfn
# Default date format 'yyyy-mm-dd'
# Conversion of obslabel() will be automatically handled without any parameters for most of time sereies frequencies .

list mylist = genr_dates()

# if the date format is 'yyyy/mm/dd'and for user_defined variable names.

/*
nFormat = 2
list mylist = genr_dates(nFormat, 1, 1, 1, 1, 1, &quot;year&quot;, &quot;quarter&quot;, &quot;month&quot;, &quot;day&quot;, &quot;weekday&quot;)
*/
</sample-script>
</gretl-function-package>
</gretl-functions>
